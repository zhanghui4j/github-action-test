name: Publish package to the GitHub Packages
on:
  push:
    tags:
      - "v*"
#    branches: [ release ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        # 安装jdk8环境(且要含有javafx)
        uses: actions/setup-java@v1
        with:
          java-version: '1.8'
          java-package: 'jdk+fx'

      - name: Build with Maven
        # 执行打包的mvn命令
        run: mvn -B compile assembly:single --file pom.xml

      # 移动打包文件
      - run: mkdir staging && cp target/*.jar staging

      - name: Set Release version env variable
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: "Build & test"
        run: |
          echo "done!"
      # 创建一个release,并将打包后的文件上传到附件
      - name: Automatic Releases
        # You may pin to the exact commit or the version.
        # uses: marvinpinto/action-automatic-releases@919008cf3f741b179569b7a6fb4d8860689ab7f0
        uses: marvinpinto/action-automatic-releases@latest
        with:
          # GitHub secret token
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.RELEASE_VERSION }}"
          prerelease: false
          title: "Release ${{ env.RELEASE_VERSION }}"
          # Assets to upload to the release
          files: |
            staging/*.jar


#jobs:
#  publish:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up Java for publishing to GitHub Packages
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'adopt'
#      - name: Publish to GitHub Packages
#        run: mvn --batch-mode deploy
#        env:
#          GITHUB_TOKEN: ${{ secrets.TOKEN }}
